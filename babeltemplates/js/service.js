// <auto-generated />
// AUTO-GENERATED FILE - DO NOT MODIFY
// Generated from {{.Filename}}
{{template "SIMPLECOMMENTS" .Comments }}

var BABELRPC = require('babelrpc');
var jayson = require('jayson');

{{range usings}}require('{{.}}');{{end}}{{$x := index .Namespaces "js"}}{{range .Services}}
{{template "COMMENTS" .Comments }}{{$cls := .Name}}{{setindent "\t"}}
var {{$cls}} = function() {
	var that = this;
	var _impl; 
{{range $i, $m := .Methods}}
{{template "METHODCOMMENTS" .}}	this.{{.Name}} = function({{range $i, $v := .Parameters}}{{toCamelCase .Name}}, {{end}}callback){
		try{
			if (_impl['{{.Name}}'] === undefined)
				throw new Error('"{{.Name}}" not implimented');
			_impl.{{.Name}}( {{range $i, $v := .Parameters}}{{toCamelCase .Name}}, {{end}}callback );				
		}catch(e){
			callback({'code':-1, 'message':e.message});
		}					
	};{{end}}

	this.jsonrpc = new function(){
		this.createServer = function(impl){
			var methods = {};
			{{range .Methods}}
			methods['{{$x}}.{{$cls}}.{{.Name}}'] = that.{{.Name}};{{end}}

			_impl = impl;
			var s = jayson.server(methods);
			return s;
		}		
	}

	this.api = new function(){
		this.createServer = function(baseUrl, impl){
			var methods = {};
			{{range .Methods}}
			methods['{{$x}}.{{$cls}}.{{.Name}}']  = that.{{.Name}};{{end}}

			_impl = impl;
			var s = BABELRPC.Babel.server(baseUrl, methods);
			return s;
		}		
	}
}
{{end}}

module.exports = exports = new function(){ {{range $i, $v := .Services}}
 	this.{{.Name}} = new {{.Name}}(); {{end}} 
}
